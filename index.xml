<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Introduction à Kubernetes</title><link>https://zaggash.github.io/tp-iut-kubernetes/</link><description>Recent content in Home on Introduction à Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>fr-fr</language><atom:link href="https://zaggash.github.io/tp-iut-kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Presentation de Kubernetes</title><link>https://zaggash.github.io/tp-iut-kubernetes/cours1_presentation_kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zaggash.github.io/tp-iut-kubernetes/cours1_presentation_kubernetes/</guid><description>Kubernetes est une solution d&amp;rsquo;orchestration de conteneurs extrêmement populaire. Le projet est très ambitieux : une façon de considérer son ampleur est de voir Kubernetes comme un système d&amp;rsquo;exploitation (et un standard ouvert) pour les applications distribuées et le cloud. Le projet est développé en Open Source au sein de la Cloud Native Computing Foundation. Architecture de Kubernetes Kubernetes rassemble en un cluster et fait coopérer un groupe de serveurs appelés noeuds (nodes).</description></item><item><title>Installer Kubernetes</title><link>https://zaggash.github.io/tp-iut-kubernetes/cours2_installation_kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zaggash.github.io/tp-iut-kubernetes/cours2_installation_kubernetes/</guid><description>Architecture de Kubernetes Kubernetes master Le Master est responsable du maintien de l’état souhaité pour votre cluster.
Lorsque vous interagissez avec Kubernetes, par exemple en utilisant l’interface en ligne de commande kubectl, vous communiquez avec le master Kubernetes de votre cluster.
Le “master” fait référence à un ensemble de processus gérant l’état du cluster. Le master peut également être répliqué pour la disponibilité et la redondance.
Noeuds Kubernetes Les nœuds d’un cluster sont les machines (serveurs physiques, machines virtuelles, etc.</description></item><item><title>TD - Installation et Configuration</title><link>https://zaggash.github.io/tp-iut-kubernetes/td1-installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zaggash.github.io/tp-iut-kubernetes/td1-installation/</guid><description>Découverte de Kubernetes Installer le client CLI kubectl kubectl est le point d&amp;rsquo;entré universel pour contrôler tous les type de cluster kubernetes. C&amp;rsquo;est un client en ligne de commande qui communique en REST avec l&amp;rsquo;API d&amp;rsquo;un cluster.
Nous allons explorer kubectl au fur et à mesure des TPs. Cependant à noter que :
kubectl peut gérer plusieurs clusters/configurations et switcher entre ces configurations kubectl n&amp;rsquo;est pas le seul outils pour intéragir avec les cluster, mais il est l&amp;rsquo;outil officiel.</description></item><item><title>Les objets Kubernetes - Partie 1</title><link>https://zaggash.github.io/tp-iut-kubernetes/cours3_objets_kubernetes_partie1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zaggash.github.io/tp-iut-kubernetes/cours3_objets_kubernetes_partie1/</guid><description>L&amp;rsquo;API et les Objets Kubernetes Utiliser Kubernetes consiste à déclarer des objets grâce à l’API Kubernetes pour décrire l’état souhaité d&amp;rsquo;un cluster : quelles applications ou autres processus exécuter, quelles images elles utilisent, le nombre de replicas, les ressources réseau et disque que vous mettez à disposition, etc.
On définit des objets généralement via l’interface en ligne de commande et kubectl de deux façons :
en lançant une commande kubectl run &amp;lt;conteneur&amp;gt; .</description></item><item><title>TD - Deployer Wordpress</title><link>https://zaggash.github.io/tp-iut-kubernetes/td2-deployer-wordpress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zaggash.github.io/tp-iut-kubernetes/td2-deployer-wordpress/</guid><description>Déployer Wordpress et MySQL avec du stockage et des Secrets Nous allons suivre ce tutoriel pas à pas : https://kubernetes.io/docs/tutorials/stateful-application/mysql-wordpress-persistent-volume/
Il faut :
copier les 2 fichiers et les appliquer vérifier que le stockage a bien fonctionné découvrir ce qui manque pour que cela fonctionne le créer à la main ou suivre le reste du tutoriel qui passe par l&amp;rsquo;outil Kustomize (attention, Kustomize ajoute un suffixe aux ressources qu&amp;rsquo;il créé) On peut ensuite observer les différents objets créés, et optimiser le process avec un fichier kustomization.</description></item></channel></rss>